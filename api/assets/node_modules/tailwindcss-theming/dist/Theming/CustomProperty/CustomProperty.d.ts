export declare type CustomPropertyValueType = string | number | Array<string | number>;
export declare class CustomProperty {
    private _name;
    private _value;
    private _parse;
    private _path?;
    private _prefix?;
    constructor(name: string, value: CustomPropertyValueType, extend?: string, prefix?: string | false, parse?: boolean);
    /**
     * Sets the name of this .
     *
     * @param {string} name
     * @returns {this}
     * @memberof CustomProperty
     */
    name(name: string): this;
    /**
     * Sets the value of this custom property.
     *
     * @param {CustomPropertyValueType} value
     * @returns {this}
     * @memberof CustomProperty
     */
    value(value: CustomPropertyValueType): this;
    /**
     * Will parse the value and export it to a string.
     *
     * @param {boolean} value
     * @returns {this}
     * @memberof CustomProperty
     */
    parse(value: boolean): this;
    /**
     * Extends Tailwind's configuration at the given path.
     *
     * @param {string} [path]
     * @returns {this}
     * @memberof CustomProperty
     */
    extend(path?: string): this;
    /**
     * Sets a prefix to the variable.
     *
     * @param {string|false} [prefix]
     * @returns {this}
     * @memberof CustomProperty
     */
    prefix(prefix?: string | false): this;
    /**
     * This custom property is extending the configuration.
     *
     * @returns {boolean}
     * @memberof CustomProperty
     */
    extends(): boolean;
    /**
     * Gets a computed version of the custom property value.
     *
     * @readonly
     * @type {string}
     * @memberof CustomProperty
     */
    get computed(): string;
    /**
     * Gets the path to which this custom property will extend.
     *
     * @readonly
     * @type {string}
     * @memberof CustomProperty
     */
    getPath(): string;
    /**
     * Gets the prefix for this property.
     *
     * @readonly
     * @type {string}
     * @memberof CustomProperty
     */
    getPrefix(withDash?: boolean): string;
    /**
     * Gets the name of this custom property.
     *
     * @returns {string}
     * @memberof CustomProperty
     */
    getName(): string;
    /**
     * Gets the value of this custom property.
     *
     * @returns {CustomPropertyValueType}
     * @memberof CustomProperty
     */
    getValue(): CustomPropertyValueType;
}
